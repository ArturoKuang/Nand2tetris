// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load ,sel=address, a=w0,b=w1,c=w2,d=w3,e=w4,f=w5,g=w6,h=w7);
    DRegister(in=in ,load=w0 ,out=reg0);
    DRegister(in=in ,load=w1 ,out=reg1);
    DRegister(in=in ,load=w2 ,out=reg2);
    DRegister(in=in ,load=w3 ,out=reg3);
    DRegister(in=in ,load=w4 ,out=reg4);
    DRegister(in=in ,load=w5 ,out=reg5);
    DRegister(in=in ,load=w6 ,out=reg6);
    DRegister(in=in ,load=w7 ,out=reg7);
    Mux8Way16(a=reg0,b=reg1,c=reg2,d=reg3,e=reg4,f=reg5,g=reg6,h=reg7,sel=address ,out=out );
}